services:
  web:
    image: "${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}"
    command: sh -c "python manage.py collectstatic --noinput && python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    expose:
      - "8000"
    depends_on:
      - db
      - redis
    env_file:
      - ./.env

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app/staticfiles
    depends_on:
      - web

  db:
    image: postgres:17.0
    volumes:
      - postgres_data:/var/lib/postgres/data
    env_file:
      - ./.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSGTRES_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 15s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: .
    command: celery -A config worker -l INFO
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - ./.env

  celery_beat:
    build:
      context: .
    command: sh -c "sleep 10 && celery -A config beat -l info -S django"
    volumes:
      - .:/app
    depends_on:
      - redis
    env_file:
      - ./.env

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data:
